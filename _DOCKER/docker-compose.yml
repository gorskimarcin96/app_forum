version: "3.7"

services:
  app-main:
    image: ${APP_NAME}
    build:
      context: ./docker_builder
    container_name: "${APP_NAME}-app"
    restart: always
    ports:
      - 127.0.0.1:80:80
    volumes:
      - ${APP_DIR-./app}:/var/www/html
      - ${PHP_INI-./config/php/php.ini}:/usr/local/etc/php/php.ini
      - ${XDEBUG_INI-./config/php/php.ini}:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      - ${VHOSTS_DIR-./config/vhosts}:/etc/apache2/sites-enabled
      - ${DIR_CONF-./config/dir/dir.conf}:/etc/apache2/mods-enabled/dir.conf
      - ${LOG_DIR-./logs/apache2}:/var/log/apache2
    environment:
      - APACHE_RUN_USER=#${UID}
      - APACHE_RUN_GROUP=#${UID}
    networks:
      - app-network
  app-queue-listener:
    image: ${APP_NAME}
    container_name: "${APP_NAME}-app-queue-listener"
    restart: always
    volumes:
      - ${APP_DIR-./app}:/var/www/html
      - ${PHP_INI-./config/php/php.ini}:/usr/local/etc/php/php.ini
    environment:
      - APACHE_RUN_USER=#${UID}
      - APACHE_RUN_GROUP=#${UID}
    entrypoint: ./_DOCKER/queue_listener.sh
    networks:
      - app-network
  mysql:
    image: mysql:5.7
    container_name: "${APP_NAME}-mysql"
    restart: always
    ports:
      - 127.0.0.1:3306:3306
    volumes:
      - ${MYSQL_SYSTEM_DIR-./mysql}:/var/lib/mysql
      - ${MYSQL_LOG_DIR-./logs/mysql}:/var/log/mysql
    environment:
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USER}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    networks:
      - app-network
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    container_name: "${APP_NAME}-phpmyadmin"
    links:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
    ports:
      - 127.0.0.1:8002:80
    volumes:
      - /sessions
    networks:
      - app-network
  mongo:
    image: mongo:4.2
    container_name: "${APP_NAME}-mongo"
    restart: always
    volumes:
      - ${MONGODB_SYSTEM_DIR-./mongodb}:/data/db
      - ${MONGODB_LOG_DIR-./logs/mongodb}:/var/log/mongodb
    environment:
      MONGO_INITDB_DATABASE: ${DATABASE_NAME}
      MONGO_INITDB_ROOT_USERNAME: ${DATABASE_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - 127.0.0.1:27017:27017
    networks:
      - app-network
  mongo-express:
    image: mongo-express
    container_name: '${APP_NAME}-mongo-express'
    restart: always
    ports:
      - 127.0.0.1:8003:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${DATABASE_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${DATABASE_PASSWORD}
    networks:
      - app-network
  redis:
    container_name: '${APP_NAME}-redis'
    restart: always
    image: library/redis:5
    ports:
      - 127.0.0.1:6379:6379
    volumes:
      - ${REDIS_CONF-./config/redis/redis.conf}:/usr/local/etc/redis/redis.conf
      - ${REDIS_DATA-./redis}:/var/lib/redis
    networks:
      - app-network
  rabbitmq:
    container_name: '${APP_NAME}-rabbitmq'
    restart: always
    image: rabbitmq:3-management-alpine
    ports:
      - 127.0.0.1:5672:5672
      - 127.0.0.1:15672:15672
    volumes:
      - ${RABBIT_DATA-./rabbit/data}:/var/lib/rabbitmq/
      - ${RABBIT_LOG_DIR-./logs/rabbitmq}:/var/log/rabbitmq/
    environment:
      RABBITMQ_DEFAULT_USER: ${DATABASE_USER}
      RABBITMQ_DEFAULT_PASS: ${DATABASE_PASSWORD}
    networks:
      - app-network
  mercure:
    container_name: '${APP_NAME}-mercure'
    image: dunglas/mercure:v0.10
    restart: always
    environment:
      - JWT_KEY=myJwtKey
      - ALLOW_ANONYMOUS=1
      - PUBLISH_ALLOWED_ORIGINS=*
      - CORS_ALLOWED_ORIGINS=*
    ports:
      - "9090:80"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge